#
# Copyright (c) 2012-2015 Codenvy, S.A.
# All rights reserved. This program and the accompanying materials
# are made available under the terms of the Eclipse Public License v1.0
# which accompanies this distribution, and is available at
# http://www.eclipse.org/legal/epl-v10.html
#
# Contributors:
#   Codenvy, S.A. - initial API and implementation
#

# URL path to api service
api.endpoint=http://localhost:${SERVER_PORT}/che/api
# range of available service ports
sys.resources.min_port=49152
sys.resources.max_port=65535

# URL part to IDE WAR
project.base_icon_url=http://localhost:${SERVER_PORT}/ws/_app/projecttype/

#builder
#max time value during which builder is executing
builder.max_execution_time=300
#value of time during which builder is waiting in queue before stopping
builder.waiting_time=600
#directory in which builder will be deployed
builder.base_directory=${catalina.base}/temp/builder
#default builder workers number
builder.workers_number=-1
#value of time during which builder keeps result
builder.keep_result_time=900
#max value of builders which are in queue
builder.queue_size=100

# runner
#total size of memory
runner.total_apps_mem_size_mb=1024
#default size of memory
runner.default_app_mem_size=256
#time during which runner is live
runner.app_lifetime=3600
#value of time during which runner is waiting in queue before stopping
runner.waiting_time=600
#directory in which runner will be deployed
runner.deploy_directory=${catalina.base}/temp/runner
runner.cleanup_time=60
#default value of tomcat runner memory
runner.tomcat.memory=256
#home directory of tomcat's runner
runner.tomcat.tomcat_home=${catalina.base}/tomcat

# java web application
runner.java_webapp.host_name=localhost
# GWT code server domain name
runner.sdk.code_server_bind_address=localhost
#sdk host name
runner.sdk.host_name=localhost
# grunt runner
runner.javascript_grunt.host_name=localhost
# gulp runner
runner.javascript_gulp.host_name=localhost
# docker
runner.docker.host_name=localhost
# extensions
extension-url=${catalina.base}/tutorials
tutorials-url=${catalina.base}/tutorials

# vfs
#local workspace id
vfs.local.id=1q2w3e
#local workspace root dir
vfs.local.fs_root_dir=${catalina.base}/temp/fs-root
#local workspace indexes root dir
vfs.local.fs_index_root_dir=${catalina.base}/temp/indexes
#local temporary workspace root dir
vfs.local.tmp_workspace_fs_root_dir=${catalina.base}/temp/tmp-ws-fs-root
# local mapping file dir
vfs.local.directory_mapping_file=${catalina.base}/temp/vfs
#default github user name
github.user=codenvy
#vendor
github.vendorOAuthScopes=repo, user, write:public_key
# everrest.async
# Disable asynchronous mechanism that is embedded in everrest. Codenvy has own mechanism for that.
org.everrest.asynchronous=false
#quantity of asynchronous requests which may be processed at the same time
org.everrest.asynchronous.pool.size=20
#Size of queue. If asynchronous request can't be processed after consuming it will be added in queue.
org.everrest.asynchronous.queue.size=500
#Timeout in minutes for request. If after timeout request is not done or client did not come yet to get result of request it may be discarded.
org.everrest.asynchronous.job.timeout=10
#Size of cache for waiting, running and ended request.
org.everrest.asynchronous.cache.size=1024
#path to asynchronous service
org.everrest.asynchronous.service.path=/async/

#security
#GitHub application Client ID
oauth.github.clientid=***
#GitHub application secret
oauth.github.clientsecret=***
#auth uri
oauth.github.authuri= https://github.com/login/oauth/authorize
#token uri
oauth.github.tokenuri= https://github.com/login/oauth/access_token
#redirected uris
oauth.github.redirecturis= http://localhost:${SERVER_PORT}/che/api/oauth/callback

# MUST be renamed in security project, it is URL of oauth error page
auth.sso.login_page_url=/error
#identifier of access denied error page
auth.oauth.access_denied_error_page=/error-oauth
oauth.wso2.useruri=

#Git OAuth Credentials Provider Configuration
oauth.wso2.git.pattern=(http|https)://((([0-9a-fA-F]{32}(:x-oauth-basic)?)|([0-9a-zA-Z-_.]+))@)?git\\.cloudpreview\\.wso2\\.com(:[0-9]{1,5})?/.+\\.git

# preferences and profile settings
user.local.db=${catalina.base}/temp

# storage path for models from local dao implementations
local.storage.path=${catalina.base}/temp/local-storage

# path to templates' description folder
project.template_descriptions_dir=${catalina.base}/che-templates
# path to templates' location
project.template_location_dir=${catalina.base}/che-templates

#path to service to slave runner
runner.slave_runner_urls=http://localhost:${SERVER_PORT}/che/api/internal/runner
#path to service to slave builder
builder.slave_builder_urls=http://localhost:${SERVER_PORT}/che/api/internal/builder

notification.server.propagate_events=vfs, project

notification.client.event_subscriptions=ws://localhost:${SERVER_PORT}/che/api/ws/=vfs,ws://localhost:${SERVER_PORT}/che/api/ws/=project
notification.client.propagate_events=

subscription.orgaddon.enabled=true
#path to docker files repos
runner.docker.dockerfiles_repo=/faik-path
#initial thread pool size for scheduled tasks
schedule.core_pool_size=10

machine.logs.location=${catalina.base}/logs
machine.docker.registry=http://localhost:5000
machine.docker.local.projects=${catalina.base}/temp

# machine extensions server archive
machine.server.ext.archive=${catalina.base}/ext-server/ext-server.zip

# machine terminal server archive
machine.server.terminal.archive=${catalina.base}/web-terminal/terminal
machine.default_mem_size_mb=1024
machine.supported_docker_version=1.6.0,1.6.1,1.6.2,1.7.1,1.8.1

git.server.uri.prefix=git